<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="categoryMapper">
<!--    <resultMap id="ProductMap" type="Product">-->
<!--        <id column="product_id" property="userNo" jdbcType="INTEGER" javaType="int"/>-->
<!--        <result column="name" property="userName" jdbcType="VARCHAR" javaType="String"/>-->
<!--    </resultMap>-->

    <select id="findNameById" parameterType="String" resultType="String">
        SELECT category_name FROM category WHERE category_id = #{categoryId}
    </select>

    <insert id="insertCategory" parameterType="com.toyproject2_5.musinsatoy.Item.category.dto.Category">
        INSERT INTO category (category_id
                             , category_name
                             , parent_category_id)
        VALUES (
                   #{categoryId}
            , #{categoryName}
            , #{parentCategoryId}
               )

    </insert>


<!-- 특정 카테고리 ID의 모든 상위 카테고리 계층적으로 찾기. -->
    <select id ="findUpperCategoryHierarchyById" parameterType="String" resultType="com.toyproject2_5.musinsatoy.Item.category.dto.CategoryHierarchyDto">
        WITH RECURSIVE CategoryHierarchy AS (
            SELECT
                category_id,
                category_name,
                parent_category_id
            FROM
                category
            WHERE
                category_id = #{categoryId}
            UNION ALL
            SELECT
                c.category_id,
                c.category_name,
                c.parent_category_id
            FROM
                category c
                    INNER JOIN
                CategoryHierarchy ch
                    ON c.category_id = ch.parent_category_id
        )

        SELECT
            category_id,
            category_name
        FROM
            CategoryHierarchy;
    </select>


<!--  해당 카테고리 ID의 상위 카테고리 하나만 찾기  -->
    <select id="findUpperCategoryById" parameterType="String" resultType="com.toyproject2_5.musinsatoy.Item.category.dto.SubCategoryDto">
        SELECT category_id
        , category_name
            FROM category
            WHERE category_id = #{categoryId}
    </select>


<!--  특정 카테고리 ID의 모든 하위 카테고리 찾기.  -->
<select id="findLowerCategoryHierarchyById" parameterType="String" resultType="com.toyproject2_5.musinsatoy.Item.category.dto.CategoryHierarchyDto">
    WITH RECURSIVE SubCategories AS (
        SELECT
            category_id,
            category_name,
            parent_category_id
        FROM
            category
        WHERE
            category_id = #{categoryID}

        UNION ALL

        SELECT
            c.category_id,
            c.category_name,
            c.parent_category_id
        FROM
            category c
                INNER JOIN
            SubCategories sc
            ON c.parent_category_id = sc.category_id
    )
    SELECT
        category_id,
        category_name
    FROM
        SubCategories
    order by category_id;
</select>

    <select id="findLowerCategoryById" parameterType="String" resultType="com.toyproject2_5.musinsatoy.Item.category.dto.SubCategoryDto">
        SELECT category_id
             , category_name
        FROM category
        WHERE parent_category_id = #{categoryId}
    </select>





    <update id="updateCategory" parameterType="com.toyproject2_5.musinsatoy.Item.category.dto.Category">
        UPDATE category
        <set>
            <if test = "categoryName != null"> category_name =#{categoryName} , </if>
            <if test = "parentCategoryId!= null"> parent_category_id =#{parentCategoryId} , </if>
        </set>
            WHERE category_id = #{categoryId}
    </update>

    <delete id="deleteByCategoryId" parameterType="String">
        DELETE FROM category WHERE category_id = #{categoryId}
    </delete>


</mapper>